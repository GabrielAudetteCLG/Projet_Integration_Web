<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://use.fontawesome.com/releases/v6.4.0/css/all.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="../../css/main.css" />
    <style>
      .active {
        color: #76b900 !important;
      }
    </style>
    <title>
      <% if(typeof(titre)!=="undefined") { %> <%= titre %> <% } else { %> Titre
      par défault <% } %>
    </title>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="container-fluid">
        <a class="navbar-brand fw-bold" style="color: white" href="/accueil"
          >Accueil</a
        >
        <a class="navbar-brand fw-bold" style="color: white" href="/boutique"
          >Boutique</a
        >
        <div class="dropdown">
          <button
            class="dropdown-toggle"
            type="button"
            id="dropdownMenuButton"
            data-toggle="dropdown"
            aria-haspopup="true"
            aria-expanded="false"
          >
            <a href="/usagers/menu">
              <i class="fa-solid fa-circle-user fa-2xl userAccountIcon"></i>
            </a>
          </button>
          <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a class="dropdown-item" href="/usagers/menu">Menu</a>
            <a class="dropdown-item" href="/usagers/ajouter">Ajouter</a>
            <a class="dropdown-item" href="/articles">Articles</a>
            <a class="dropdown-item" href="/usagers/deconnexion"
              >Se déconnecter</a
            >
          </div>
        </div>
      </div>
    </nav>
    <%- body %>

    <!-- Icône flottante pour le chatbot -->
    <div class="floating-chatbot-icon" onclick="toggleChatbot()">
      <i class="fas fa-comments"></i>
    </div>

    <!-- Chatbot -->
    <div class="chatbot-container card" id="chatbot-container">
      <div class="card-header chatbot-header">
        <h5 class="mb-0">Chatbot</h5>
        <button class="btn-close" onclick="toggleChatbot()"></button>
      </div>
      <div class="chatbot-messages card-body p-2" id="chatbot-messages"></div>
      <div class="card-footer chatbot-input-container p-2">
        <div class="input-group">
          <input
            type="text"
            id="chatbot-input"
            class="form-control"
            placeholder="Tapez votre message..."
          />
          <button class="btn btn-primary" onclick="sendMessage()">
            Envoyer
          </button>
        </div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const navbarLinks = document.querySelectorAll(".navbar-brand");
        const currentPath = window.location.pathname;

        navbarLinks.forEach((link) => {
          if (link.getAttribute("href") === currentPath) {
            link.classList.add("active");
          } else {
            link.classList.remove("active");
          }
        });
      });
    </script>
    <script>
      const chatbotContainer = document.getElementById("chatbot-container");
      const chatbotMessages = document.getElementById("chatbot-messages");
      const chatbotInput = document.getElementById("chatbot-input");

      function toggleChatbot() {
        chatbotContainer.style.display =
          chatbotContainer.style.display === "none" ? "flex" : "none";
      }

      async function sendMessage() {
        const message = chatbotInput.value;
        if (!message) return;

        chatbotInput.value = "";

        // Affichez le message de l'utilisateur
        const userMessage = document.createElement("div");
        userMessage.textContent = message;
        userMessage.classList.add("chatbot-message-sent"); // Ajoutez la classe CSS pour les messages envoyés
        chatbotMessages.appendChild(userMessage);

        // Envoyez la requête au serveur
        try {
          const response = await fetch("/chatbot", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message }),
          });

          const data = await response.json();

          // Affichez la réponse du chatbot
          const chatbotMessage = document.createElement("div");
          chatbotMessage.textContent = data.message;
          chatbotMessage.classList.add("chatbot-message-received"); // Ajoutez la classe CSS pour les messages reçus
          chatbotMessages.appendChild(chatbotMessage);
        } catch (error) {
          console.error(error);
        }

        // Faites défiler vers le bas pour afficher les nouveaux messages
        chatbotMessages.scrollTop = chatbotMessages.scrollHeight;
      }
    </script>
    <script src="../public/script.js"></script>
  </body>
</html>
